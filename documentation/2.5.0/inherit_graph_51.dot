digraph "Graphical Class Hierarchy"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node92 [label="sf::Drawable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Drawable.php",tooltip="Abstract base class for objects that can be drawn to a render target. "];
  Node92 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="sf::Shape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Shape.php",tooltip="Base class for textured shapes with outline. "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="sf::CircleShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1CircleShape.php",tooltip="Specialized shape representing a circle. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="sf::ConvexShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1ConvexShape.php",tooltip="Specialized shape representing a convex polygon. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="sf::RectangleShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RectangleShape.php",tooltip="Specialized shape representing a rectangle. "];
  Node92 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="sf::Sprite",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Sprite.php",tooltip="Drawable representation of a texture, with its own transformations, color, etc. "];
  Node92 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="sf::Text",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Text.php",tooltip="Graphical text that can be drawn to a render target. "];
  Node92 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="sf::VertexArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1VertexArray.php",tooltip="Define a set of one or more 2D primitives. "];
  Node92 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="sf::VertexBuffer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1VertexBuffer.php",tooltip="Vertex buffer storage for one or more 2D primitives. "];
  Node87 [label="sf::GlResource",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1GlResource.php",tooltip="Base class for classes that require an OpenGL context. "];
  Node87 -> Node45 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="sf::Context",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Context.php",tooltip="Class holding a valid drawing context. "];
  Node87 -> Node58 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="sf::Shader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Shader.php",tooltip="Shader class (vertex, geometry and fragment) "];
  Node87 -> Node88 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 [label="sf::Texture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Texture.php",tooltip="Image living on the graphics card that can be used for drawing. "];
  Node87 -> Node89 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 -> Node66 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="sf::Window",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Window.php",tooltip="Window that serves as a target for OpenGL rendering. "];
  Node66 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="sf::RenderWindow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderWindow.php",tooltip="Window that can serve as a target for 2D drawing. "];
  Node80 [label="sf::InputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1InputStream.php",tooltip="Abstract class for custom file input streams. "];
  Node80 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="sf::FileInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1FileInputStream.php",tooltip="Implementation of input stream based on a file. "];
  Node80 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node81 [label="sf::MemoryInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1MemoryInputStream.php",tooltip="Implementation of input stream based on a memory chunk. "];
  Node44 [label="sf::NonCopyable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1NonCopyable.php",tooltip="Utility class that makes any derived class non-copyable. "];
  Node44 -> Node45 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 -> Node46 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="sf::Cursor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Cursor.php",tooltip="Cursor defines the appearance of a system cursor. "];
  Node44 -> Node47 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 -> Node48 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="sf::Ftp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Ftp.php",tooltip="A FTP client. "];
  Node44 -> Node49 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="sf::GlResource::Transient\lContextLock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1GlResource_1_1TransientContextLock.php",tooltip="RAII helper class to temporarily lock an available context for use. "];
  Node44 -> Node50 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="sf::Http",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Http.php",tooltip="A HTTP client. "];
  Node44 -> Node51 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="sf::InputSoundFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1InputSoundFile.php",tooltip="Provide read access to sound files. "];
  Node44 -> Node52 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="sf::Lock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Lock.php",tooltip="Automatic wrapper for locking and unlocking mutexes. "];
  Node44 -> Node53 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="sf::Mutex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Mutex.php",tooltip="Blocks concurrent access to shared resources from multiple threads. "];
  Node44 -> Node54 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="sf::OutputSoundFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1OutputSoundFile.php",tooltip="Provide write access to sound files. "];
  Node44 -> Node55 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="sf::RenderTarget",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderTarget.php",tooltip="Base class for all render targets (window, texture, ...) "];
  Node55 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="sf::RenderTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderTexture.php",tooltip="Target for off-screen 2D rendering into a texture. "];
  Node55 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 -> Node58 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 -> Node59 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="sf::Socket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Socket.php",tooltip="Base class for all the socket types. "];
  Node59 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="sf::TcpListener",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1TcpListener.php",tooltip="Socket that listens to new TCP connections. "];
  Node59 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="sf::TcpSocket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1TcpSocket.php",tooltip="Specialized socket using the TCP protocol. "];
  Node59 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="sf::UdpSocket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1UdpSocket.php",tooltip="Specialized socket using the UDP protocol. "];
  Node44 -> Node63 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="sf::Thread",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Thread.php",tooltip="Utility class to manipulate threads. "];
  Node44 -> Node64 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="sf::ThreadLocal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1ThreadLocal.php",tooltip="Defines variables with thread-local storage. "];
  Node64 -> Node65 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="sf::ThreadLocalPtr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1ThreadLocalPtr.php",tooltip="Pointer to a thread-local variable. "];
  Node44 -> Node66 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="sf::Transformable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Transformable.php",tooltip="Decomposed transform defined by a position, a rotation and a scale. "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
